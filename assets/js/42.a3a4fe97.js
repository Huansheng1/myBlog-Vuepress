(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{389:function(e,v,o){"use strict";o.r(v);var _=o(43),a=Object(_.a)({},(function(){var e=this,v=e.$createElement,o=e._self._c||v;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"node初体验"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#node初体验"}},[e._v("#")]),e._v(" node初体验")]),e._v(" "),o("h2",{attrs:{id:"安装配置nodejs"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#安装配置nodejs"}},[e._v("#")]),e._v(" 安装配置nodeJS")]),e._v(" "),o("h3",{attrs:{id:"node-js概念"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#node-js概念"}},[e._v("#")]),e._v(" Node.js概念")]),e._v(" "),o("blockquote",[o("p",[e._v("官方解释：")])]),e._v(" "),o("ul",[o("li",[o("p",[e._v("Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。 Node.js使用了一个事件驱动、非阻塞式I/O的模型（ Node.js的特性），使其轻量级又高效。 Node.js 的包管理器 npm 是全球最大的开源库生态系统。")])]),e._v(" "),o("li",[o("p",[e._v("Node 内部采用 Google Chrome 的 V8 引擎，作为 JavaScript 语言解释器；")])]),e._v(" "),o("li",[o("p",[e._v("通过自行开发的 libuv 库，调用操作系统资源。")])])]),e._v(" "),o("blockquote",[o("p",[e._v("非官方解释：")])]),e._v(" "),o("ul",[o("li",[e._v("Node.js：是 JavaScript 语言在服务器端的运行环境（平台）。")])]),e._v(" "),o("blockquote",[o("p",[e._v("运行环境（平台）的含义：")])]),e._v(" "),o("ul",[o("li",[e._v("首先，JavaScript 语言通过 Node 在服务器运行，在这个意义上，Node 有点像 JavaScript 虚拟机。")]),e._v(" "),o("li",[e._v("其次，Node 提供大量工具库，使得 JavaScript 语言能与操作系统互动（比如读写文件、新建子进程），在这个意义上， Node 又是 JavaScript 的工具库。")])]),e._v(" "),o("blockquote",[o("p",[e._v("总结：")])]),e._v(" "),o("ul",[o("li",[e._v("Node.js 是一个 JavaScript 的运行环境（平台），不是一门语言，也不是 JavaScript 的框架。")]),e._v(" "),o("li",[e._v("与PHP、JSP、Python、Perl、Ruby的“既是语言，也是平台”不同，Node.js的使用JavaScript进行编程，运行在 Chrome 的 V8 引擎上。")]),e._v(" "),o("li",[e._v("与PHP、JSP等相比（PHP、JSP、.net都需要运行在服务器程序上，Apache、Naginx、Tomcat、IIS。 ），Node.js跳过了Apache、Naginx、IIS等HTTP服务器，它自己不用建设在任何服务器软件之上。")]),e._v(" "),o("li",[e._v("Node.js的许多设计理念与经典架构（LAMP = Linux + Apache + MySQL + PHP）有着很大的不同，可以提供强大的伸缩能力。Node.js没有web容器。")])]),e._v(" "),o("h3",{attrs:{id:"nodejs安装配置"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#nodejs安装配置"}},[e._v("#")]),e._v(" nodeJs安装配置")]),e._v(" "),o("ul",[o("li",[o("p",[e._v("Node.js 安装包及源码下载地址为："),o("a",{attrs:{href:"https://nodejs.org/en/download/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://nodejs.org/en/download/"),o("OutboundLink")],1)])]),e._v(" "),o("li",[o("p",[e._v("注意，我们建议使用偶数版（V4、V6等)，不要用奇数版（比如V5），因为奇数版不稳定。")])]),e._v(" "),o("li",[o("p",[e._v("下一步N次即可，检测node是否安装："),o("br"),e._v(" "),o("img",{attrs:{src:"https://gitee.com/huanshenga/myimg/raw/master/PicGo/20200605211642.png",alt:""}})])]),e._v(" "),o("li",[o("p",[e._v("其实并不推荐直接采用 Node.js.msi 安装包进行安装，原因如下：")])]),e._v(" "),o("li",[o("blockquote",[o("p",[e._v("不方便 node 的更新，以前版本安装的很多全局的工具包需要重新安装；")])])]),e._v(" "),o("li",[o("blockquote",[o("p",[e._v("无法回滚到之前的版本；")])])]),e._v(" "),o("li",[o("blockquote",[o("p",[e._v("无法在多个版本之间切换（很多时候我们要使用特定版本）。")])])]),e._v(" "),o("li",[o("blockquote",[o("p",[e._v("因此，如果想效果更好，可以谷歌"),o("code",[e._v("NVM")]),e._v("的方式来安装 Node.js。")])])])]),e._v(" "),o("h3",{attrs:{id:"npm配置"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#npm配置"}},[e._v("#")]),e._v(" npm配置")]),e._v(" "),o("blockquote",[o("p",[e._v('输入 "npm -v" 来测试npm是否成功安装')])]),e._v(" "),o("blockquote",[o("p",[o("img",{attrs:{src:"https://gitee.com/huanshenga/myimg/raw/master/PicGo/20200605211821.png",alt:""}})])]),e._v(" "),o("blockquote",[o("p",[e._v("如果有人以前安装过了老版本npm，Window 系统使用以下命令升级："),o("br"),e._v(" "),o("code",[e._v("npm install npm -g")])])]),e._v(" "),o("blockquote",[o("p",[e._v("国内npm下载比较慢，我们切换淘宝镜像："),o("br"),e._v(" "),o("code",[e._v("npm install -g mirror-config-china --registry=http://registry.npm.taobao.org")])])]),e._v(" "),o("blockquote",[o("p",[e._v("查看当前镜像地址："),o("code",[e._v("npm config get registry")])])]),e._v(" "),o("h3",{attrs:{id:"npm模块"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#npm模块"}},[e._v("#")]),e._v(" npm模块")]),e._v(" "),o("blockquote",[o("p",[e._v("版本号")])]),e._v(" "),o("ul",[o("li",[o("p",[e._v("使用NPM下载和发布代码时都会接触到版本号。NPM使用语义版本号来管理代码，这里简单介绍一下。")])]),e._v(" "),o("li",[o("p",[e._v("语义版本号分为X.Y.Z三位，分别代表主版本号、次版本号和补丁版本号。当代码变更时，版本号按以下原则更新：")])]),e._v(" "),o("li",[o("ol",[o("li",[e._v("如果只是修复bug，需要更新Z位。")])])]),e._v(" "),o("li",[o("ol",{attrs:{start:"2"}},[o("li",[e._v("如果是新增了功能，但是向下兼容，需要更新Y位。")])])]),e._v(" "),o("li",[o("ol",{attrs:{start:"3"}},[o("li",[e._v("如果有大变动，向下不兼容，需要更新X位。")])])]),e._v(" "),o("li",[o("p",[e._v('版本号有了这个保证后，在申明第三方包依赖时，除了可依赖于一个固定版本号外，还可依赖于某个范围的版本号。例如"argv": "0.0.x"表示依赖于0.0.x系列的最新版argv。')])])]),e._v(" "),o("h3",{attrs:{id:"npm常见命令"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#npm常见命令"}},[e._v("#")]),e._v(" npm常见命令")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("npm init --yes")]),o("br"),e._v("\n项目的初始化。执行完成后，会生成package.json文件。")])]),e._v(" "),o("blockquote",[o("ul",[o("li",[e._v("简写：'npm init -y'")])])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("npm install [package]")]),o("br"),e._v("\n只在当前工程下安装 package。")])]),e._v(" "),o("blockquote",[o("ul",[o("li",[e._v("简写：'npm i [package]'")])])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("npm install -g [package]")]),o("br"),e._v("\n在全局环境下安装 package。")])]),e._v(" "),o("blockquote",[o("ul",[o("li",[e._v("简写：'npm i -g [package]'")])])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("npm install --save-dev [package]")]),o("br"),e._v("\n在当前工程环境下安装 package - 仅在开发时依赖。")])]),e._v(" "),o("blockquote",[o("ul",[o("li",[e._v("简写：'npm i -D [package]'")])])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("npm install --save [package]")]),o("br"),e._v("\n在当前工程环境下安装 package - 生产时依赖。")])]),e._v(" "),o("blockquote",[o("ul",[o("li",[e._v("简写：'npm i -S [package]'")])])]),e._v(" "),o("ul",[o("li",[o("p",[o("code",[e._v("npm run [script]")]),o("br"),e._v('\n运行package中的"scripts" 对象中的指令')])]),e._v(" "),o("li",[o("p",[o("code",[e._v("npm uninstall [package]")]),o("br"),e._v("\n卸载某个模块 package。")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("npm update [package]")]),o("br"),e._v("\n更新某个模块 package。")])]),e._v(" "),o("li",[o("blockquote",[o("p",[e._v("使用"),o("code",[e._v("npm update <package>")]),e._v("可以把当前目录下node_modules子目录里边的对应模块更新至最新版本。"),o("br"),e._v("\n使用"),o("code",[e._v("npm update <package> -g")]),e._v("可以把全局安装的对应命令行程序更新至最新版。")])])]),e._v(" "),o("li",[o("p",[o("code",[e._v("npm cache clear")]),o("br"),e._v("\n清空NPM本地缓存，用于对付使用相同版本号发布新版本代码的人。")])]),e._v(" "),o("li",[o("p",[e._v("`npm -h``\n显示Npm的帮助信息：查看所有命令")])]),e._v(" "),o("li",[o("blockquote",[o("p",[o("code",[e._v("npm help <command>")]),o("br"),e._v("\n查看某条命令的详细帮助，例如npm help install")])])])]),e._v(" "),o("h4",{attrs:{id:"npm安装命令-效果差别"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#npm安装命令-效果差别"}},[e._v("#")]),e._v(" npm安装命令 效果差别")]),e._v(" "),o("ul",[o("li",[e._v("npm install：本地安装")]),e._v(" "),o("li",[o("blockquote",[o("p",[e._v("(1)将安装包放在 ./node_modules 下（运行 npm 命令时所在的目录），如果没有 node_modules 目录，会在当前执行 npm 命令的目录下生成 node_modules 目录。")])])]),e._v(" "),o("li",[o("blockquote",[o("p",[e._v("(2)可以通过 require() 来引入本地安装的包。\nnpm install -g：全局安装")])])]),e._v(" "),o("li",[o("blockquote",[o("p",[e._v("(1) 将安装包放在 /usr/local 下或者你 node 的安装目录。")])])]),e._v(" "),o("li",[o("blockquote",[o("p",[e._v("(2)可以直接在命令行里使用。")])])]),e._v(" "),o("li",[e._v("npm install --save：生产时依赖")]),e._v(" "),o("li",[o("blockquote",[o("p",[e._v("(1)会把msbuild包安装到node_modules目录中")])])]),e._v(" "),o("li",[o("blockquote",[o("p",[e._v("(2)会在package.json的dependencies属性下添加msbuild")])])]),e._v(" "),o("li",[o("blockquote",[o("p",[e._v("(3)之后运行npm install命令时，会自动安装msbuild到node_modules目录中")])])]),e._v(" "),o("li",[o("blockquote",[o("p",[e._v("(4)之后运行npm install --production或者注明NODE_ENV变量值为production时，会自动安装msbuild到node_modules目录中")])])]),e._v(" "),o("li",[e._v("npm install --save-dev：开发时依赖")]),e._v(" "),o("li",[o("blockquote",[o("p",[e._v("(1)会把msbuild包安装到node_modules目录中")])])]),e._v(" "),o("li",[o("blockquote",[o("p",[e._v("(2)会在package.json的devDependencies属性下添加msbuild")])])]),e._v(" "),o("li",[o("blockquote",[o("p",[e._v("(3)之后运行npm install命令时，会自动安装msbuild到node_modules目录中")])])]),e._v(" "),o("li",[o("blockquote",[o("p",[e._v("(4)之后运行npm install --production或者注明NODE_ENV变量值为production时，不会自动安装msbuild到node_modules目录中")])])]),e._v(" "),o("li",[e._v("npm前两者不会修改package.json，而后两者会将依赖添加进package.json")])]),e._v(" "),o("h3",{attrs:{id:"node执行js"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#node执行js"}},[e._v("#")]),e._v(" node执行js")]),e._v(" "),o("ul",[o("li",[e._v("执行某个Js文件："),o("br"),e._v(" "),o("code",[e._v("node xxx.js")])])]),e._v(" "),o("h3",{attrs:{id:"node简单使用"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#node简单使用"}},[e._v("#")]),e._v(" node简单使用")]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("简单Http服务")]),o("br"),e._v("\n在 Node.js 上建一个 http 服务器：")])]),e._v(" "),o("ul",[o("li",[o("p",[e._v("新建一个文件 server01.js，然后在里面输入如下代码："),o("br"),e._v(" "),o("img",{attrs:{src:"https://gitee.com/huanshenga/myimg/raw/master/PicGo/20200605214136.png",alt:""}})])]),e._v(" "),o("li",[o("p",[e._v("在浏览器端输入http://localhost:8080/，每请求一次，服务器的控制台就会打印 有人来访问我了。")])]),e._v(" "),o("li",[o("p",[e._v("上面的 js 代码跑起来，产生的问题是，无论我们在浏览器端输入http://localhost:8080/1.html，还是输入http://localhost:8080/2.jpg，浏览器上显示的都是不变的。")])]),e._v(" "),o("li",[o("p",[e._v("不过这是代码问题，我们以后需要使用再进行拓展……")])])])])}),[],!1,null,null,null);v.default=a.exports}}]);