(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{392:function(t,s,a){"use strict";a.r(s);var n=a(43),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"迭代-递归-与-遍历-的区别和检测"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#迭代-递归-与-遍历-的区别和检测"}},[t._v("#")]),t._v(" 迭代/递归 与 遍历 的区别和检测")]),t._v(" "),a("h2",{attrs:{id:"迭代-递归"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#迭代-递归"}},[t._v("#")]),t._v(" 迭代/递归")]),t._v(" "),a("p",[t._v("ES6 规定，默认的 "),a("code",[t._v("Iterator")]),t._v(" 接口部署在数据结构的"),a("code",[t._v("Symbol.iterator")]),t._v("属性，或者说，一个数据结构只要具有"),a("code",[t._v("Symbol.iterator")]),t._v("属性，就可以认为是“可遍历的”（"),a("code",[t._v("iterable")]),t._v("）。")]),t._v(" "),a("p",[t._v("原生具备 "),a("code",[t._v("Iterator")]),t._v(" 接口的数据结构如下：")]),t._v(" "),a("ul",[a("li",[t._v("Array")]),t._v(" "),a("li",[t._v("Map")]),t._v(" "),a("li",[t._v("Set")]),t._v(" "),a("li",[t._v("String")]),t._v(" "),a("li",[t._v("TypedArray")]),t._v(" "),a("li",[t._v("函数的 arguments 对象")]),t._v(" "),a("li",[t._v("NodeList 对象")])]),t._v(" "),a("p",[t._v("检测是否是可迭代对象：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义 检查一个对象是否可迭代 的函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isIterator")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isIterator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("h2",{attrs:{id:"与变量的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与变量的区别"}},[t._v("#")]),t._v(" 与变量的区别")]),t._v(" "),a("h3",{attrs:{id:"迭代和遍历的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#迭代和遍历的区别"}},[t._v("#")]),t._v(" 迭代和遍历的区别")]),t._v(" "),a("p",[a("strong",[t._v("迭代")]),t._v("：")]),t._v(" "),a("ol",[a("li",[t._v("自己调用自己的方法，又称"),a("strong",[t._v("递归")]),t._v("。")]),t._v(" "),a("li",[t._v("很多程序有迭代器。这是一种用于“遍历”数组的工具对象。一般遍历一个数组都是使用循环变量从0到最后一个，或者使用链表遍历量表中内容。使用迭代器可以不关注数组的具体实现方式，遍历数组中所有成员。")])]),t._v(" "),a("p",[a("strong",[t._v("遍历")]),t._v("：")]),t._v(" "),a("ol",[a("li",[t._v("对数据结构中每一个成员都进行一次访问的操作就是遍历；比如遍历数组、遍历树。")]),t._v(" "),a("li",[t._v("遍历树的常见方法有：先序/中序/后序，或者按照另一个纬度划分有，广度遍历和深度遍历。")])]),t._v(" "),a("h2",{attrs:{id:"更多"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更多"}},[t._v("#")]),t._v(" 更多")]),t._v(" "),a("p",[t._v("文档：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:""}})])]),t._v(" "),a("p",[t._v("文章：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.nowcoder.com/questionTerminal/47a43dcd64244bdbad6846509866a23c?orderByHotValue=1&page=1&onlyReference=false",target:"_blank",rel:"noopener noreferrer"}},[t._v("以下哪些对象是Javascript内置的可迭代对象？"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/iterator#%E9%BB%98%E8%AE%A4-Iterator-%E6%8E%A5%E5%8F%A3",target:"_blank",rel:"noopener noreferrer"}},[t._v("Iterator 和 for...of 循环 - ECMAScript 6入门"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=r.exports}}]);