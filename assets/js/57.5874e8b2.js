(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{403:function(t,e,a){"use strict";a.r(e);var v=a(43),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"angular小知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#angular小知识"}},[t._v("#")]),t._v(" Angular小知识")]),t._v(" "),a("h2",{attrs:{id:"服务：组件级注入与模块注入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务：组件级注入与模块注入"}},[t._v("#")]),t._v(" 服务：组件级注入与模块注入")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("组件级注入")]),t._v("为"),a("code",[t._v("非单例模式")]),t._v("，不同组件的服务实例是不一样的；而 "),a("code",[t._v("模块注入")]),t._v("为"),a("code",[t._v("单例模式")]),t._v("，不同组件里使用的服务依旧为同一个实例。\n"),a("img",{attrs:{src:"https://gitee.com/huanshenga/myimg/raw/master/PicGo/20201031115847.png",alt:""}}),a("img",{attrs:{src:"https://gitee.com/huanshenga/myimg/raw/master/PicGo/20201031115905.png",alt:""}})])]),t._v(" "),a("p",[t._v("详解：")]),t._v(" "),a("ol",[a("li",[a("p",[a("img",{attrs:{src:"https://gitee.com/huanshenga/myimg/raw/master/PicGo/20201031104751.png",alt:""}}),a("br"),t._v("\n根据官方文档，服务注入机制我们可理解为类似于原型链，当前组件如果使用"),a("code",[t._v("依赖注入")]),t._v("的服务，会从下而上一层一层模块中寻找使用是否已经有了注入的服务实例，那么，模块注入时根模块注入我们明白了下面的子模块都能找到服务，因此使用一个服务实例，那么在不同组件当前的模块中注入的服务是否为一个呢？")])]),t._v(" "),a("li",[a("p",[a("img",{attrs:{src:"https://gitee.com/huanshenga/myimg/raw/master/PicGo/20201031105306.png",alt:""}}),t._v("\n这就是为什么 "),a("code",[t._v("模块注入时不管是在根模块注入还是在不同模块")]),t._v("进行注入，依旧"),a("code",[t._v("为同一实例")]),t._v("；因为默认的加载方式是"),a("code",[t._v("急性加载")]),t._v("，如果我们想要某个服务只在指定模块中使用则可通过将该模块"),a("code",[t._v("惰性加载")]),t._v("方式来避免这一问题。")])])]),t._v(" "),a("blockquote",[a("p",[t._v("在服务装饰器"),a("code",[t._v("providedIn")]),t._v("声明给那个模块使用可让 "),a("code",[t._v("Angular")]),t._v("明白该服务可不可以被"),a("code",[t._v("摇掉")]),t._v("，在模块装饰器"),a("code",[t._v("provides")]),t._v("或者组件装饰器"),a("code",[t._v("provides")]),t._v("声明则无法被摇。")])]),t._v(" "),a("p",[t._v("详解："),a("br"),t._v(" "),a("img",{attrs:{src:"https://gitee.com/huanshenga/myimg/raw/master/PicGo/20201031105919.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"组件封装模式修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件封装模式修改"}},[t._v("#")]),t._v(" 组件封装模式修改")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huanshenga/myimg/raw/master/PicGo/20201031110605.png",alt:""}})]),t._v(" "),a("p",[t._v("通过该设置，组件的"),a("code",[t._v("class")]),t._v("类名不再会进行特殊处理来使得只在组件内生效，不然如果开启的话你需要特别注意"),a("code",[t._v("class")]),t._v("名是否合理，因为其会污染全局样式！")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/huanshenga/myimg/raw/master/PicGo/20201031111250.png",alt:""}}),a("br"),t._v("\n此外，如果试过在变量里加上"),a("code",[t._v("style")]),t._v("样式你会发现依旧是无法生效的，但这个出现原理与上面的原理不同，上面的是对"),a("code",[t._v("class")]),t._v("选择器进行处理，避免全局样式污染，而屏蔽变量内样式的原因是因为为了防止"),a("code",[t._v("xss")]),t._v("攻击，我们通过"),a("code",[t._v("domSanitizer")]),t._v("对其进行转换即可解决该问题："),a("img",{attrs:{src:"https://gitee.com/huanshenga/myimg/raw/master/PicGo/20201031110947.png",alt:""}})]),t._v(" "),a("p",[t._v("当然，如果你这样做了，你需要确保你这个变量确实安全。")]),t._v(" "),a("p",[t._v("最后，我们来提一下"),a("code",[t._v("::deep")]),t._v("模式："),a("img",{attrs:{src:"https://gitee.com/huanshenga/myimg/raw/master/PicGo/20201031111645.png",alt:""}})]),t._v(" "),a("p",[t._v("通过"),a("code",[t._v("::ng-deep")]),t._v("我们可使得该选择器避免被局部化处理，也就是说该"),a("code",[t._v("class")]),t._v("选择器最终编译出来的不再会是额外加上"),a("code",[t._v("属性选择器")]),t._v("处理后的局部样式，而是变为了一个全局样式，可是在这里我们只是想让父组件的样式能够影响子组件，而不是变成全局样式，污染兄弟组件；")]),t._v(" "),a("p",[t._v("因此，我们可通过"),a("code",[t._v(":host")]),t._v("限制宿主元素，这里就表示在该选择器加上父元素属性选择器，来使得该样式只在父组件的组件树（父组件自身与其子孙元素），从而避免影响兄弟组件样式的问题！")]),t._v(" "),a("h2",{attrs:{id:"组件封装与双向绑定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件封装与双向绑定"}},[t._v("#")]),t._v(" 组件封装与双向绑定")]),t._v(" "),a("p",[t._v("表单自带的双向绑定与变化时监听事件："),a("img",{attrs:{src:"https://gitee.com/huanshenga/myimg/raw/master/PicGo/20201031113229.png",alt:""}})]),t._v(" "),a("p",[t._v("由于我很少遇见这种写法，待定。。。")]),t._v(" "),a("h2",{attrs:{id:"生命周期、view、content"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生命周期、view、content"}},[t._v("#")]),t._v(" 生命周期、"),a("code",[t._v("View")]),t._v("、"),a("code",[t._v("Content")])]),t._v(" "),a("ol",[a("li",[a("code",[t._v("constructor")]),t._v("构造函数执行时"),a("code",[t._v("@Input")]),t._v("输入属性还没有值，初始化方法应该在"),a("code",[t._v("ngOnInit")]),t._v("钩子函数里调用"),a("img",{attrs:{src:"https://gitee.com/huanshenga/myimg/raw/master/PicGo/20201031115041.png",alt:""}})]),t._v(" "),a("li",[a("code",[t._v("View")]),t._v("指的是通过"),a("code",[t._v("#")]),t._v("直接调用子组件，而"),a("code",[t._v("Content")]),t._v("仅仅只是"),a("code",[t._v("ng-content")]),t._v("内容："),a("img",{attrs:{src:"https://gitee.com/huanshenga/myimg/raw/master/PicGo/20201031114446.png",alt:""}})])]),t._v(" "),a("blockquote",[a("p",[t._v("以上内容，记录自"),a("a",{attrs:{href:"https://www.bilibili.com/video/BV1sZ4y1x7pP?from=search&seid=8078396507219473471",target:"_blank",rel:"noopener noreferrer"}},[t._v("Angular』初学者必踩的十个坑"),a("OutboundLink")],1),t._v("，用于我个人笔记，不支持商业用途。")])])])}),[],!1,null,null,null);e.default=_.exports}}]);